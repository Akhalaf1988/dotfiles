#! /usr/bin/env bash

##global variables##
RED='\033[0;31m'
NC='\033[0m'
BLUE='\033[1;34m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
###################
_helpsec(){
cat <<- EOF

Usage: mql option

   Options:

        -d       Add a new db
        -ed      Add new user to existing db
        -eu      Add an existing user to new db
        -eud     Add an existing user to an existing db
        -h       Displays this message
        -ld      lists all dbs
        -lu      lists all users
        -r       Reset password for given user
        -u       Add new user
        -ud      Creates a new db plus new user
        -U       Add a user to all dbs

EOF
}
############ Domain block ##########################
_domchk(){
##check if domain in path has a vhost##
D="$(pwd | cut -d/ -f4)";
_VHOST="$(find /etc/httpd/conf.d/ -type f -iname "vhost*" \
| cut -d/ -f5 | sed 's/vhost_//g;s/\.conf//g')"
V="$(echo "${_VHOST}"| grep "^${D}")"
    if [[ -n "${V}" ]]; then
        DOM="$D";
        #list mysql dbs
        _LMDB="$(sudo siteworx -u --login_domain="${DOM}" -n -c MysqlDb -a listMysqlDatabases)"
        ##List mysql users
        _LMU="$(sudo siteworx -u --login_domain="${DOM}" -c MysqlUser -n -a listMysqlUsers)"
        _USER="$(sudo siteworx -u --login_domain="${DOM}" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')";
    else
        echo ""
        echo -en "${RED}This script has to be ran from a domain directory ${NC}";
        echo ""
        echo ""
        exit
    fi
}

############## USER Block ############################
_uinfo(){
##grab user input
    echo -en "${CYAN}User:${NC} ";
    read U;
    if [[ -z $U ]]; then
       _uinfo;
    else
      _userinfocheck
fi
}
_userinfocheck(){
###check if a username has their unix prefix and if so, cut it out.
    _grepuser="$(echo "${U}" | grep "${_USER}")";
    if [[ -n "${_grepuser}" ]]; then
        U="$(echo "${U}" | cut -d_ -f2,3)";
        _uexistchk;

   else
        U="$(echo "${U}")";
        _uexistchk;
    fi
}
_uexistchk(){
#check if mysql user exists
   UserCheck="$(echo "${_LMU}" | awk '{print $1}' | grep ^$U$)";
   if [[ -n "${UserCheck}" && "${input}" == "-u" || -n "${UserCheck}" && "${input}" == "-U" \
   || -n "${UserCheck}" && "${input}" == "-ed" || -n "${UserCheck}" && "${input}" == "-ud" \
   || -n "${UserCheck}" && "${input}" == "-cp" ]]; then
   echo -e "${RED}User already exists${NC}";
   _uinfo;
else
   _uLchk;
fi
}
_uLchk(){
##checking length of the input##default character limit in siteworx is 7
    _WC="$(echo ""$U"" | wc -m)";
    if [[ "${_WC}" -gt "8" && "${input}" != "-eud" || "${_WC}" -gt "8" && "${input}" != "-eu" ]]; then
        echo -e ""$RED"Character limit of 7 exceeded"$NC"";
        _uinfo;
    else
        _userNFC;
    fi
}
_userNFC(){
#check to see if the user is not found##used when adding existing users
    if [[ -z "${UserCheck}" && "${input}" == "-eud" || -z "${UserCheck}" && "${input}" == "-eu" || -z "${UserCheck}" && "${input}" == "-r" ]]; then
        echo -e "${RED}No user found${NC}";
        _uinfo;
    fi
}

############### Start db block ###################
###check user input###
_dbinfo(){

    echo -en "${CYAN}DB:${NC} ";
    read DB;
    if [[ -z $DB ]]; then
        _dbinfo;
    else
        _dbinfoUchk;
    fi
}

###check unix name is part of input###
_dbinfoUchk(){

    DBC="$(echo "${DB}" | grep "${_USER}")";
    if [[ -n "${DBC}" ]]; then
        DB="$(echo "${DB}" | cut -d_ -f2,3)";
        _dbinfoEchk;
    else
        DB="$(echo "${DB}")";
        _dbinfoEchk;
    fi
}

###check if a db exists
_dbinfoEchk(){

    MDB="$(echo "${_LMDB}" | awk '{print $1}' | grep ^$DB$)";
    if [[ -n "${MDB}" && "${input}" == "-d" || -n "${MDB}" && "${input}" == "-eu" || -n "${MDB}" && "${input}" == "-ud" || -n "${MDB}" && "${input}" == "-cp" ]]; then
        echo -e ""$RED"DB already exists"$NC"";
        _dbinfo;
    else
        _dbchk;
    fi;
}
##check if the db is found, used for existing dbs
_dbchk(){

    if [[ -z "${MDB}" && "${input}" == "-ed" || -z "${MDB}" && "${input}" == "-eud" || -z "${MDB}" && "${input}" == "-c" || -z "${MDB}" && "${input}" == "-i" ]]; then
        echo -e ""$RED"No DB found"$NC"";
        _dbinfo;
    fi
}
########## start password block ##################
_pwg(){
###check if dictionary exists
    if [[ -e /usr/local/interworx/lib/dict/words ]]; then
        D='/usr/local/interworx/lib/dict/words';
        _getpass;
    else
        D='/usr/share/dict/words';
        _getpass;
    fi
}
_getpass(){
###generate a password###
    W1="$(shuf -n1000 "${D}" | head -n1)";
    W2="$(shuf -n1000 "${D}" | tail -n1)";
    W3="$(shuf -n1000 "${D}" | head -n1)";
    N="$(seq 99 | sort -R | tail -n1)";
    echo "${W1}${W2}${W3}${N}" | sed "s/'//g"
}

_passinfo(){
##checking input for password
    echo -en "${CYAN}New password (default: random):${NC} ";
    read PW;
    if [ -z "${PW}" ]; then
        PW="$(_pwg)";
    else
        _chkpassL;
    fi
}
_chkpassL(){
#check password length
    PL="$(printf "${PW}" | wc -m)";
    if [[ "${PL}" -gt "11" ]]; then
        PW="$PW";
    else
        echo -e ""$RED"Password is too short""$NC";
        _passinfo;
    fi
}
####Setvar##
uservar(){
_AMU="$(sudo siteworx -u --login_domain="${DOM}" -c MysqlUser -n -a add --name "${U}" --password "${PW}" --confirm_password "${PW}";)"
}
dbvar(){
_AMD="$(sudo siteworx -u --login_domain="${DOM}" -n -c MysqlDb -a add --name "${DB}")"
}
permvar(){
_AMP="$(sudo siteworx -u --login_domain="${DOM}" -c MysqlPerms -n -a add --name "${DB}" --user "${U}" --perms all;)"
}

################ actions ###################

###########  Add one user -u #############
_Adduser(){
    printf "${GREEN}Adding user...";
    echo "${_AMU}";
    echo ""
    echo -e "Username:${NC} ${_USER}_${U}${GREEN}"
    echo -e "password:${NC} ${PW}"
    echo ""
}
####ADD user to all dbs -U ######
_adduserall(){

    D="$(echo "${_LMDB}" | awk '{print $1}')";
    printf "${GREEN}Adding user...";
    echo "${_AMU}";
    for x in ${D};
    do
        sudo siteworx -u --login_domain="${DOM}" -c MysqlPerms -n -a add --name "${x}" --user "${U}" --perms all;
    done;
    echo ""
    echo -e " Username:${NC} ${_USER}_${U}${GREEN}
 password:${NC} ${PW}"
    echo ""
}

########## ADD DB (-d) ###############
_adddb(){
    printf "${GREEN}Adding DB...${NC}";
    echo "${_AMD}"
    echo -e "${GREEN}"
    echo -e " DB:${NC} ${_USER}_${DB}"
    echo ""
}

## ADD NEW USER TO EXISTING DB (-ed)##
_adduserndb(){

    printf "${GREEN}Adding user...";
    echo "${_AMU}"
    echo "${_AMP}"
    echo -e "${GREEN} Database:${NC} ${_USER}_${DB}${GREEN}"
    echo -e " Username:${NC} ${_USER}_${U}${GREEN}"
    echo -e " password:${NC} ${PW}"
    echo ""
}

###### ADD X USER TO X DB (-eud) ######
_addxuex(){

    printf "${GREEN}Adding Permissions...${NC}";
    echo "${_AMP}"
    echo "${GREEN}done${NC}"
}

##### ADD X USER to N DB (-eu) #######
_adddbxu(){

    printf "${GREEN}Creating DB and adding user...${NC}";
    echo "${_AMD}"
    echo "${_AMP}"
    echo -e "${GREEN} Database:${NC} ${_USER}_${DB}"
    echo -e "${GREEN} Database User:${NC} ${_USER}_${U}"
    echo ""
}

##### ADD N DB PLUS N USER (-ud) #####
_adddbpu(){

    printf "${GREEN}Adding user and db...${NC}";
    sudo siteworx -u --login_domain="${DOM}" -n -c MysqlDb -a add --name "${DB}" --create_user 1 --user "${U}" --password "${PW}" --confirm_password "${PW}" --host "${DOM}";
    printf "${GREEN}Done\n";
    echo ""
    echo -e " DB:${NC}   ${_USER}_${DB}"
    echo -e "${GREEN} User:${NC} ${_USER}_${U}"
    echo -e "${GREEN} Pass:${NC} ${PW}"
    echo ""
}

###list all databases -ld ###
_listdbs(){

    echo ""
    echo -e "${CYAN}---[Db list]---"
    echo -e "${GREEN}";
    echo "${_LMDB}" | awk '{print $2}' | sed s'/^/   /g'
    echo -e "${NC}"
}

###list users -lu ###
_listusers(){

    echo ""
    echo -e "${CYAN}---[Users list]---"
    echo -e "${GREEN}"
    echo "${_LMU}" | awk '{print $2}' | sed s'/^/   /g'
    echo -e ""$NC""
}


#######Change user password (-r)###
change_pass(){

    echo ""
    printf "${GREEN}Changing password for "${U}"...${NC}";
    printf "${GREEN}Done\n";
    siteworx -u --login_domain="${DOM}" -c MysqlUser -n -a edit --name "${U}" --password "${PW}" --confirm_password "${PW}"
    echo ""
    echo -e "Username:${NC} ${_USER}_${U}${GREEN}"
    echo -e "password:${NC} ${PW}"
    echo ""
}

case $1 in
 -d)input="$1";_domchk;_dbinfo;dbvar;_adddb;;
 -ed)input="$1";_domchk;_uinfo;_passinfo;uservar;_dbinfo;permvar;_adduserndb;;
 -eu)input="$1";_domchk;_uinfo;_dbinfo;dbvar;permvar;_adddbxu;;
 -eud)input="$1";_domchk;_uinfo;_dbinfo;permvar;_addxuex;;
 -h|--help) _helpsec;;
 -ld)input="$1";_domchk;_listdbs;;
 -lu)input="$1";_domchk;_listusers;;
 -r)input="$1";_domchk;_uinfo;_passinfo;change_pass;;
 -u)input="$1";_domchk;_uinfo;_passinfo;uservar;_Adduser;;
 -ud)input="$1";_domchk;_uinfo;_passinfo;_dbinfo;_adddbpu;;
 -U)input="$1";_domchk;_uinfo;_passinfo;uservar;_adduserall;;
 *) echo "Not a valid option or no input given";_helpsec;;
esac
