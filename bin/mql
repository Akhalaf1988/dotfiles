#! /usr/bin/env bash

##global variables##
DASH="$(for i in {1..12}; do echo -n "-"; done)"
RED='\033[0;31m'
NC='\033[0m'
BLUE='\033[1;34m'
####################
_helpsec(){

cat <<- EOF

Usage: mql -flag

   Supported Aruguments

      -uad|--uadbs          Add a new user to all dbs
       -ad|--db             Add a new db
       -au|--user           Add new user
       -ed|--uxd            Add new user to existing db
      -eud|--xuxd           Add an existing user to an existing db
       -eu|--xund           Add an existing user to new db
        -h|--help           Displays this message
       -ld|--listdbs        lists all dbs
       -lu|--listusers      lists all users
      -nud|--nund           Creates a new db plus new user

EOF
}
#########Domain check ########
_domchk(){
D="$(pwd | cut -d/ -f4)"
V="$(ls /etc/httpd/conf.d/ | grep "vhost_"$D".conf")"
  if [[ -n "$V" ]]; then
    DOM="$D"
else
    echo -n "Domain: "
    read DOM
    _vhostchk
  fi
}

_vhostchk(){
V="$(ls /etc/httpd/conf.d/ | grep "vhost_"$DOM".conf")"
  if [[ -z "$V" ]]; then
     echo -e ""$RED"No Domain Found"$NC""
     _domchk
  fi
}
#########################

############## Database info ###############
_dbinfo(){
R="$(sudo siteworx -u --login_domain="$DOM" -n \
-c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"

   echo -n "DB: "
   read DB
_inputchk
}
_inputchk(){
if [[ -z $DB ]]; then
_dbinfo
else
_dbinfoUchk
fi
}
_dbinfoUchk(){
J="$(echo "$DB" | grep "$R")"
if [[ -n "$J" ]]; then
DB="$(echo "$DB" | cut -d_ -f2,3)"
_dbinfoLchk
else
DB="$(echo "$DB")"
_dbinfoLchk
fi
}
_dbinfoLchk(){
W="$(echo "$DB" | wc -m)"
if [[ "$W" -gt 8 ]]; then
echo -e ""$RED"Character length of 7exceeded"$NC""
_dbinfo
else
_dbinfoEchk
fi
}
_dbinfoEchk(){
E="$(sudo siteworx -u --login_domain="$DOM" -n \
-c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $DB$)"
if [[ -n "$E" ]]; then
echo -e ""$RED"DB exists!"$NC""
_dbinfo
fi
}

########### User info #############

_dbuinfo(){
   echo -n "User: "
   read U
inputchk2
}
inputchk2(){
if [[ -z $U ]]; then
_dbuinfo
else
_dbuexistchk
fi
}
_dbuexistchk(){
UC="$(sudo siteworx -u --login_domain="$DOM" \
-c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $U$)"

if [[ -n "$UC" ]]; then
echo -e ""$RED"User exists!"$NC""
_dbuinfo
else
_dbuinfoUchk
fi
}

_dbuinfoUchk(){
Y="$(echo "$U" | grep "$R")"
if [[ -n "$Y" ]]; then
U="$(echo "$U" | cut -d_ -f2,3)"
_dbuinfoLchk
else
U="$(echo "$U")"
_dbuinfoLchk
fi
}
_dbuinfoLchk(){
W1="$(echo "$U" | wc -m)"
if [[ "$W1" -gt 8 ]]; then
echo -e ""$RED"Character limit of 7 exceeded"$NC""
_dbuinfo
fi
}

_pwg(){
if [[ -e /usr/local/interworx/lib/dict/words ]]; then

    D='/usr/local/interworx/lib/dict/words';
    _getpass
else
   D='/usr/share/dict/words'
   _getpass
fi
}
_getpass(){
W1="$(shuf -n1000 "$D" | head -n1)"
W2="$(shuf -n1000 "$D" | tail -n1)"
W3="$(shuf -n1000 "$D" | head -n1)"
W4="$(shuf -n1000 "$D" | tail -n1)"
W5="$(shuf -n1000 "$D" | tail -n1)"
N="$(seq 99 | sort -R | tail -n1)"
 echo ""$W1""$W2""$W3""$W""$W5""$N"" | sed -e 's|["'\'']||g'
}
_passinfo(){
echo -n "New password (default: random): "
   read PW
 if [ -z "$PW" ]; then
  PW="$(_pwg)"
else
   PW="$PW"
 fi
}
_adddbpu(){

sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DB" --create_user 1 \
--user "$U" --password "$PW" \
--confirm_password "$PW"

echo "
New DB credentials

DB:   "$R"_"$DB""
echo "User: "$R"_"$U""
echo "Pass: "$PW"

"
}
#########################
_dbuinfoe(){
echo -n "User: "
read U
_inputchk3
}

_inputchk3(){
if [[ -z $U ]]; then
_dbuinfoe
else
_dbuinfochk
fi
}

_dbuinfochk(){
Y="$(echo "$U" | grep "$R")"
if [[ -n "$Y" ]]; then
U="$(echo "$U" | cut -d_ -f2,3)"
_chkusrexist
else
U="$(echo "$U")"
_chkusrexist
fi
}

_chkusrexist(){

S="$(sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $U$)"

if [[ -z "$S" ]]; then
    echo -e ""$RED"No user found"$NC""
    _dbuinfoe
else
    _dbuinfoe1
fi
}

_dbuinfoe1(){
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DB"

sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DB" --user "$U" --perms all
echo "
New DB created

Database: "$R"_"$DB""
echo "DBUser:   "$R"_"$U"
"
}
_adddb(){
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DB"
echo "
DB: "$R"_"$DB"
"
}

##########Add user to all dbs#########
_adduserall(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails \
| head -n1 | awk '{print $2}')"
D="$(sudo siteworx -u --login_domain="$DOM" -c MysqlDb -a list | awk '{print $1}')"
echo "adding user..."
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name "$U" \
--password "$PW" --confirm_password "$PW"

for x in $D; do sudo siteworx -u --login_domain="$DOM" \
-c MysqlPerms -n -a add --name $x --user "$U" --perms all; done

echo "
User added!

Username: "$R"_"$U"
password: "$PW"
"
}

###########add just user########

_adduser(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails \
| head -n1 | awk '{print $2}')"
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name "$U" \
--password "$PW" --confirm_password "$PW"
echo "
User added!
Username: "$R"_"$U"
password: "$PW""

}
############################
#########ADD existing user to existing db#######

_userinfo1(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails \
| head -n1 | awk '{print $2}')"
   echo -n "User: "
   read U
_inputchk4
}
_inputchk4(){
if [[ -z $U ]]; then
_userinfo1
else
_userinfo11
fi
}
_userinfo11(){
J="$(echo "$U" | grep "$R")"
if [[ -n "$J" ]]; then
U="$(echo "$U" | cut -d_ -f2)"
_addusere
else
U="$(echo "$U")"
_addusere
fi
}
_addusere(){
K="$(sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $U$)"

if [[ -z "$K" ]]; then
    echo -e ""$RED"No user found"$NC""
    _userinfo1
else
    _adduseree
fi
}
_adduseree(){
    echo -n "DB: "
      read B
_inputchk5
}
_inputchk5(){

if [[ -z $B ]]; then
_adduseree
else
_addusereee
fi
}
_addusereee(){
J="$(echo "$B" | grep "$R")"
    if [[ -n "$J" ]]; then
B="$(echo "$B" | cut -d_ -f2)"
_adduseren
   else
B="$(echo "$B")"
_adduseren
fi
}
_adduseren(){
M="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $B$)"

if [[ -z "$M" ]]; then
    echo -e ""$RED"No DB found"$NC""
    _adduseree
else
    _adduserex
fi
}
_adduserex(){

sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$B" --user "$U" --perms all

echo "Permissions added!"
}
########################
################new user to existing db###########

_adduser1(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails \
| head -n1 | awk '{print $2}')"
echo -n "DB: "
  read DB1
_inputchk6
}
_inputchk6(){

if [[ -z $DB1 ]]; then
_adduser1
else
_adduser112
fi
}
_adduser112(){
L="$(echo "$DB1" | grep "$R")"
if [[ -n "$L" ]]; then
DB="$(echo "$DB1" | cut -d_ -f2,3)"
_dbchkk
else
DB="$(echo "$DB1")"
_dbchkk
fi
}

_dbchkk(){
M="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $DB1$)"

if [[ -z "$M" ]]; then
    echo -e ""$RED"No DB found"$NC""
    _adduser1
else
    _adduser12
fi
}

_adduser12(){

sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name "$U" \
--password "$PW" --confirm_password "$PW"
sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DB" --user "$U" --perms all

echo "
User added!

Database: "$R"_"$DB"
Username: "$R"_"$U"
password: "$PW""

}
##################################

##########List all dbs############
_dblist(){
echo "Db list"
echo "$DASH"
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2, $4, $5}' | column -t
}
##########List all users##########
_listusers(){
echo "Users list"
echo "$DASH"
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a listMysqlUsers | awk '{print $2}'
}

if [[ "$1" == "-ld" || "$1" == "--listdbs" ]]; then
_domchk
_dblist
else
if [[ "$1" == "-eud" || "$1" == "--xuxd" ]]; then
 _domchk
 _userinfo1
else
if [[ "$1" == "-lu" || "$1" == "--listusers" ]]; then
_domchk
_listusers
else
if [[ "$1" == "-ed" || "$1" == "--uxd" ]]; then
 _domchk
 _dbuinfo
_passinfo
_adduser1
else
if [[ "$1" == "-ad" || "$1" == "--db" ]]; then
_domchk
_dbinfo
_adddb
else
if [[ "$1" == "-au" || "$1" == "--user" ]]; then
_domchk
_dbuinfo
_passinfo
_adduser
else
if [[ "$1" == "-nud" || "$1" == "--nund" ]]; then
_domchk
_dbinfo
_dbuinfo
_passinfo
_adddbpu
else
if [[ "$1" == "-eu" || "$1" == "--xund" ]]; then
_domchk
_dbinfo
_dbuinfoe
else
if [[ "$1" == "-c" || "$1" == "--copy" ]]; then
_domchk
_DBCinfo
else
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
_helpsec
else
if [[ "$1" == "-uad" || "$1" == "--uadbs" ]]; then
_domchk
_dbuinfo
_passinfo
_adduserall
else
_helpsec
          fi
         fi
        fi
       fi
      fi
     fi
    fi
   fi
  fi
 fi
fi
