#! /usr/bin/env bash

##global variables##
DASH="$(for i in {1..12}; do echo -n "-"; done)"
RED='\033[0;31m'
NC='\033[0m'
BLUE='\033[1;34m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
###################
_helpsec(){
cat <<- EOF


Usage: mql -flag

   Supported Aruguments

        -U       Add a user to all dbs
        -d       Add a new db
        -u       Add new user
       -ed       Add new user to existing db
      -eud       Add an existing user to an existing db
       -eu       Add an existing user to new db
        -c       Copy source db and import to new (auto creates user and db)
        -h       Displays this message
        -i       Import sql file(s) to db
       -ld       lists all dbs
       -lu       lists all users
       -ud       Creates a new db plus new user

EOF
}
#########Domain check ########
_domchk(){
D="$(pwd | cut -d/ -f4)"
V="$(ls /etc/httpd/conf.d/ | grep "vhost_"$D".conf")"
  if [[ -n "$V" ]]; then
    DOM="$D"
else
    echo -en ""$CYAN"Domain: "$NC""
    read DOM
    _vhostchk
  fi
}
_vhostchk(){
S="$(ls -l /etc/httpd/conf.d/ | awk '{print $9}' | grep vhost | cut -d_ -f2 | sed -e 's/.conf//g' | grep  ^$DOM | wc -l)"
Rx="$(ls -l /etc/httpd/conf.d/ | awk '{print $9}' | grep vhost | cut -d_ -f2 | sed -e 's/.conf//g' | grep  ^$DOM | tail -n1)"
  if [[ "$S" == "1" ]]; then
DOM="$Rx"
echo -e ""$GREEN""$DOM""$NC""
else
_domlist
fi
}
_domlist(){
CC="$(ls -l /etc/httpd/conf.d/ | awk '{print $9}' | grep vhost | cut -d_ -f2 | sed -e 's/.conf//g' | grep  ^$DOM | grep -v "000" | nl)"
if [[ -z "$CC" ]]; then
  echo -e ""$RED"No Domain found"$NC""
 _domchk
else
  echo -e ""$CYAN"Choose Domain [pick a number]: "$NC"
"
ls -l /etc/httpd/conf.d/ | awk '{print $9}' | grep vhost | cut -d_ -f2 | sed -e 's/.conf//g' | grep  ^$DOM | grep -v "000" | nl
echo -en ""$CYAN"
Domain:"$NC" "
 read P
if [[ -z "$P" ]]; then
  _vhostchk
else
Q="$(ls -l /etc/httpd/conf.d/ | awk '{print $9}' | grep vhost | cut -d_ -f2 | sed -e 's/.conf//g' | grep  ^$DOM | grep -v "000"| nl | grep "\b"$P"\b" | awk '{print $2}')"
if [[ -z "$Q" ]]; then
_vhostchk
else
DOM="$Q"
echo -e ""$GREEN""$DOM"""$NC"
  fi
 fi
fi
}
############## Database info ###############
_dbinfo(){
R="$(sudo siteworx -u --login_domain="$DOM" -n \
-c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
echo -en ""$CYAN"DB:"$NC" "
   read DB
_inputchk
}
_inputchk(){
if [[ -z $DB ]]; then
_dbinfo
else
_dbinfoUchk
fi
}
_dbinfoUchk(){
J="$(echo "$DB" | grep "$R")"
if [[ -n "$J" ]]; then
DB="$(echo "$DB" | cut -d_ -f2,3)"
_dbinfoLchk
else
DB="$(echo "$DB")"
_dbinfoLchk
fi
}
_dbinfoLchk(){
W="$(echo "$DB" | wc -m)"
if [[ "$W" -gt 8 ]]; then
echo -e ""$RED"Character length of 7 exceeded"$NC""
_dbinfo
else
_dbinfoEchk
fi
}
_dbinfoEchk(){
E="$(sudo siteworx -u --login_domain="$DOM" -n \
-c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $DB$)"
if [[ -n "$E" ]]; then
echo -e ""$RED"DB already exists"$NC""
_dbinfo
fi
}
########### User info #############
_dbuinfo(){
R="$(sudo siteworx -u --login_domain="$DOM" -n \
-c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
   echo -en ""$CYAN"User:"$NC" "
   read U
inputchk2
}
inputchk2(){
if [[ -z $U ]]; then
_dbuinfo
else
_dbuexistchk
fi
}
_dbuexistchk(){
UC="$(sudo siteworx -u --login_domain="$DOM" \
-c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $U$)"
if [[ -n "$UC" ]]; then
echo -e ""$RED"User already exists"$NC""
_dbuinfo
else
_dbuinfoUchk
fi
}
_dbuinfoUchk(){
Y="$(echo "$U" | grep "$R")"
if [[ -n "$Y" ]]; then
U="$(echo "$U" | cut -d_ -f2,3)"
_dbuinfoLchk
else
U="$(echo "$U")"
_dbuinfoLchk
fi
}
_dbuinfoLchk(){
W1="$(echo "$U" | wc -m)"
if [[ "$W1" -gt 8 ]]; then
   echo -e ""$RED"Character limit of 7 exceeded"$NC""
   _dbuinfo
fi
}
_pwg(){
if [[ -e /usr/local/interworx/lib/dict/words ]]; then

    D='/usr/local/interworx/lib/dict/words';
    _getpass
else
   D='/usr/share/dict/words'
   _getpass
fi
}
_getpass(){
W1="$(shuf -n1000 "$D" | head -n1)"
W2="$(shuf -n1000 "$D" | tail -n1)"
W3="$(shuf -n1000 "$D" | head -n1)"
W4="$(shuf -n1000 "$D" | tail -n1)"
N="$(seq 99 | sort -R | tail -n1)"
 echo ""$W1""$W2""$W3""$W""$N"" | sed -e 's|["'\'']||g'
}

_passinfo(){
echo -en ""$CYAN"New password (default: random):"$NC" "
   read PW
 if [ -z "$PW" ]; then
  PW="$(_pwg)"
else
   _chkpassL
 fi
}
_chkpassL(){
LC="$(printf ""$PW"" | wc -m)"
if [[ "$LC" -lt "12" ]]; then
 echo -e ""$RED"Password is too short""$NC"
  _passinfo
else
  PW="$PW"
fi
}


_adddbpu(){
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DB" --create_user 1 --user "$U" --password "$PW" --confirm_password "$PW"
echo -e ""$GREEN"
New credentials

DB:   "$NC""$R"_"$DB""$GREEN"
User:"$NC" "$R"_"$U""$GREEN"
Pass:"$NC" "$PW"
"
}
#########################
_dbuinfoe(){
echo -en ""$CYAN"User:"$NC" "
read U
_inputchk3
}
_inputchk3(){
if [[ -z $U ]]; then
_dbuinfoe
else
_dbuinfochk
fi
}
_dbuinfochk(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
Y="$(echo "$U" | grep "$R")"
if [[ -n "$Y" ]]; then
U="$(echo "$U" | cut -d_ -f2,3)"
_chkusrexist
else
U="$(echo "$U")"
_chkusrexist
fi
}
_chkusrexist(){
S="$(sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $U$)"
if [[ -z "$S" ]]; then
    echo -e ""$RED"No user found"$NC""
    _dbuinfoe
else
    _dbuinfoe1
fi
}
_dbuinfoe1(){
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DB"

sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DB" --user "$U" --perms all
echo -e ""$GREEN"
New DB created

 Database:"$NC""$R"_"$DB""$GREEN"
 DBUser:  "$NC""$R"_"$U"
"
}
_adddb(){
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DB"
echo -e ""$GREEN"
DB:"$NC" "$R"_"$DB"
"
}
##########Add user to all dbs#########
_adduserall(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
D="$(sudo siteworx -u --login_domain="$DOM" -c MysqlDb -a list | awk '{print $1}')"
printf ""$GREEN"adding user..."$NC""
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name "$U" --password "$PW" --confirm_password "$PW"
for x in $D; do sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name $x --user "$U" --perms all; done
printf ""$GREEN"User added\n""$NC"

echo -e ""$GREEN"
Username:"$NC""$R"_"$U""$GREEN"
password: "$PW"
"
}
###########add just user########
_adduser(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails \
| head -n1 | awk '{print $2}')"
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name "$U" \
--password "$PW" --confirm_password "$PW"
echo -e ""$GREEN"
User added

Username:"$NC""$R"_"$U""$GREEN"
password:"$NC""$PW""
}
############################
#########ADD existing user to existing db#######
_userinfo1(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
   echo -en ""$CYAN"User:"$NC" "
   read U
_inputchk4
}
_inputchk4(){
if [[ -z $U ]]; then
_userinfo1
else
_userinfo11
fi
}
_userinfo11(){
J="$(echo "$U" | grep "$R")"
if [[ -n "$J" ]]; then
U="$(echo "$U" | cut -d_ -f2)"
_addusere
else
U="$(echo "$U")"
_addusere
fi
}
_addusere(){
K="$(sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $U$)"
if [[ -z "$K" ]]; then
    echo -e ""$RED"No user found"$NC""
    _userinfo1
else
    _adduseree
fi
}
_adduseree(){
    echo -en ""$CYAN"DB:"$NC" "
      read B
_inputchk5
}
_inputchk5(){
if [[ -z $B ]]; then
_adduseree
else
_addusereee
fi
}
_addusereee(){
J="$(echo "$B" | grep "$R")"
    if [[ -n "$J" ]]; then
B="$(echo "$B" | cut -d_ -f2)"
_adduseren
   else
B="$(echo "$B")"
_adduseren
fi
}
_adduseren(){
M="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $B$)"
if [[ -z "$M" ]]; then
    echo -e ""$RED"No DB found"$NC""
    _adduseree
else
    _adduserex
fi
}
_adduserex(){
sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$B" --user "$U" --perms all && echo "Permissions added"
}
########################
################new user to existing db###########
_adduser1(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
echo -en ""$CYAN"DB:"$NC" "
  read DB1
_inputchk6
}
_inputchk6(){
if [[ -z $DB1 ]]; then
_adduser1
else
_adduser112
fi
}
_adduser112(){
L="$(echo "$DB1" | grep "$R")"
if [[ -n "$L" ]]; then
DB="$(echo "$DB1" | cut -d_ -f2,3)"
_dbchkk
else
DB="$(echo "$DB1")"
_dbchkk
fi
}
_dbchkk(){
M="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $DB1$)"
if [[ -z "$M" ]]; then
    echo -e ""$RED"No DB found"$NC""
    _adduser1
else
    _adduser12
fi
}
_adduser12(){
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name "$U" \
--password "$PW" --confirm_password "$PW"
sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DB" --user "$U" --perms all
echo -e ""$GREEN"
User added

Database:"$NC""$R"_"$DB""$GREEN"
Username:"$NC""$R"_"$U""$GREEN"
password:"$NC""$PW""
}
########## Clone database ########################
_SDBinfo(){
R="$(sudo siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails \
| head -n1 | awk '{print $2}')"
echo -en ""$CYAN"Source DB:"$NC" "
read SDB
_SDBinfochk
}
_SDBinfochk(){
if [[ -z $SDB ]]; then
_SDBinfo
else
_stripuser
fi
}
_stripuser(){
KK="$(echo "$SDB" | grep "$R")"
if [[ -n "$KK" ]]; then
SDB="$(echo "$SDB" | cut -d_ -f2,3)"
_SDBchk
else
SDB="$(echo "$SDB")"
_SDBchk
fi
}
_SDBchk(){
M1="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $SDB$)"

if [[ -z "$M1" ]]; then
    echo -e ""$RED"No DB found"$NC""
    _SDBinfo
else
    _SDBdump
fi
}
_SDBdump(){
printf ""$GREEN"Adding user and permissions..."$NC""
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name PZqm6C --password SomeCoolPassword123 --confirm_password SomeCoolPassword123
sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$SDB" --user PZqm6C --perms all
printf ""$GREEN"done\n""$NC"
printf ""$GREEN"Exporting source database..."$NC""
sudo -u "$R" mysqldump --opt --skip-lock-tables --routines --max_allowed_packet=2G -u "$R"_PZqm6C -p "$R"_"$SDB" --password=SomeCoolPassword123 | gzip > ~/import_"$SDB".sql.gz
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a delete --name PZqm6C
printf ""$GREEN"done\n"$NC""
_DDBinforchk
}

_DDBinforchk(){
echo -en ""$CYAN"External DB [y/n]:"$NC" "
read Y
if [[ "$Y" == "y" || "$Y" == "Y" ]]; then
_Domchkmin
else
_DDBinfo
fi
}
_Domchkmin(){
echo -en ""$CYAN"Domain:"$NC" "
read DOM1
_domchk1
}
_domchk1(){
D2="$(ls /etc/httpd/conf.d/ | grep "vhost_"$DOM1".conf")"
if [[ -z "$D2" ]]; then
echo -e ""$RED"No domain found"$NC""
_Domchkmin
else
D3="$(sudo siteworx -u --login_domain="$DOM1" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"
DOM="$DOM1"
R="$D3"
_DDBinfo
fi
}
_DDBinfo(){
echo -en ""$CYAN"Destination DB:"$NC" "
read DDB
_DDBinfochk
}

_DDBinfochk(){
if [[ -z $DDB ]]; then
_DDBinfo
else
_DDBchk
fi
}
_DDBchk(){
M2="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $DDB$)"

if [[ -n "$M2" ]]; then
    echo -e ""$RED"DB already exists"$NC""
    _DDBinfo
else
    _stripuser1
fi
}
_stripuser1(){
KK1="$(echo "$DDB" | grep "$R")"
if [[ -n "$KK1" ]]; then
DDB="$(echo "$DDB" | cut -d_ -f2,3)"
_DDBLchk
else
DDB="$(echo "$DDB")"
_DDBLchk
fi
}
_DDBLchk(){
WX="$(echo "$DDB" | wc -m)"
if [[ "$WX" -gt 8 ]]; then
   echo -e ""$RED"Character limit of 7 exceeded"$NC""
   _DDBinfo
else
 _DBU
fi
}
_DBU(){
echo -en ""$CYAN"User:"$NC" "
read DBU
_DBUchk
}
_DBUchk(){
if [[ -z $DBU ]]; then
_DBU
else
_DBUexist
fi
}
_DBUexist(){
UC1="$(sudo siteworx -u --login_domain="$DOM" \
-c MysqlUser -n -a listMysqlUsers | awk '{print $2}' | grep $DBU$)"

if [[ -n "$UC1" ]]; then
echo -e ""$RED"User already exists"$NC""
_DBU
else
_stripuser2
fi
}
_stripuser2(){
KK1="$(echo "$DBU" | grep "$R")"
if [[ -n "$KK1" ]]; then
DBU="$(echo "$DBU" | cut -d_ -f2,3)"
_DBULchk
else
DBU="$(echo "$DBU")"
_DBULchk
fi
}
_DBULchk(){
WX1="$(echo "$DBU" | wc -m)"
if [[ "$WX1" -gt 8 ]]; then
   echo -e ""$RED"Character limit of 7 exceeded"$NC""
   _DBU
else
   _PWchk
fi
}
_pwg1(){
if [[ -e /usr/local/interworx/lib/dict/words ]]; then

    D='/usr/local/interworx/lib/dict/words';
    _getpass1
else
   D='/usr/share/dict/words'
   _getpass1
fi
}
_getpass1(){
W1="$(shuf -n1000 "$D" | head -n1)"
W2="$(shuf -n1000 "$D" | tail -n1)"
W3="$(shuf -n1000 "$D" | head -n1)"
W4="$(shuf -n1000 "$D" | tail -n1)"
N="$(seq 99 | sort -R | tail -n1)"
 echo ""$W1""$W2""$W3""$W""$N"" | sed -e 's|["'\'']||g'
}
_PWchk(){
echo -en ""$CYAN"New password (default: random):"$NC" "
   read PW
 if [ -z "$PW" ]; then
  PW="$(_pwg1)"
   _adu
else
  _chkpwl
fi
}
_chkpwl(){
if [[ "$PW" -lt "12" ]];then
echo -e ""$RED"Password is too short"$NC""
   _PWchk
else
PW="$PW"
   _adu
 fi
}
_adu(){
printf ""$GREEN"Adding database and permissions..."$NC""
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a add --name "$DDB"
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name  "$DBU" --password "$PW" --confirm_password "$PW"
sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DDB" --user "$DBU" --perms all
printf ""$GREEN"done\n"$NC""
printf ""$GREEN"Importing database..."$NC""
zcat ~/import_"$SDB".sql.gz | sed -r 's/DEFINER\s*\=\s*\S+\@\S+//g' | mysql -u "$R"_"$DBU" -p "$R"_"$DDB" --password="$PW"
printf ""$GREEN"done\n"$NC""
   echo -e ""$GREEN"
 Database:"$NC" "$R"_"$DDB""$GREEN"
 DBUser:"$NC"   "$R"_"$DBU""$GREEN"
 Password:"$NC" "$PW"
"
}
######### Begin Import #####
#########  file info   #####
_fileinfo(){
USER="$(siteworx -u --login_domain="$DOM" -n -c Overview -a listAccountDetails | head -n1 | awk '{print $2}')"

  echo -en ""$CYAN"File:"$NC" "
  read DBF
_inputchkx
}
_inputchkx(){
if [[ -z $DBF ]]; then
_fileinfo
else
if [[ "$DBF" == "stop" || "$DBF" == "quit" || "$DBF" == "q" || "$DBF" == "exit" ]]; then
    echo -e ""$RED"Stopped"$NC""
else
    _fileinfo2
 fi
fi
}
_fileinfo2(){
I="$(echo "$DBF" | tail -c 4)"
 if [[ "$I" == ".xz" || "$I" == ".gz" || "$I" == "sql" ]]; then
   _dbinfo1
else
   echo -e "
"$RED"Not a supported file type"$NC"
"
   _fileinfo
 fi
}
######### DB info ########
_dbinfo1(){
B="$(echo "$DBF" | tail -c 4)"
     echo -en ""$CYAN"Database:"$NC" "
        read DB
_inputchkxx
}
_inputchkxx(){
if [[ -z $DB ]]; then
_dbinfo1
else
if [[ "$DB" == "stop" || "$DB" == "quit" || "$DB" == "q" || "$DB" == "exit" ]]; then
    echo -e ""$RED"Stopped"$NC""
else
 _filechk
 fi
fi
}
_filechk(){
if [[ $DB == "gofile" ]]; then
_fileinfo
else
_userinfo
fi
}
_userinfo(){
J="$(echo "$DB" | grep "$USER")"
if [[ -n "$J" ]]; then
DB="$(echo "$DB"| cut -d_ -f2,3)"
_DBexchk
else
DB="$(echo "$DB")"
_DBexchk
fi
}
_DBexchk(){
DBC="$(sudo siteworx -u --login_domain=$DOM -n -c MysqlDb -a listMysqlDatabases | awk '{print $2}' | grep $DB$)"
if [[ -z "$DBC" ]]; then
echo -e "
"$RED"No Db Found"$NC"
"
_dbinfo1
else
_chksize
fi
}
_chksize(){
O="$(sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $4, $2}' | grep $DB$ | awk '{print $1}')"
if [[ "$O" != "0.00" ]]; then
echo -e ""$RED"DB not empty, import anyway [y/n]: "$NC""
  read IMC
   _impont
else
   _mysqlchk
fi
}
_impont(){
if [[ "$IMC" == "y" || "$IMC" == "Y" ]]; then
_mysqlchk
else
_dbinfo1
fi
}
_mysqlchk(){
User1='Pz9QmXl'
C="$(siteworx -u --login_domain="$DOM" -c MysqlUser \
-n -a list | awk '{print $1}' | grep "$User1")"

  if [[ -n "$C" ]]; then
User1='pZ9qMxL'
  trap "_mysqlrm" EXIT
     _mysqladd
else
   if [[ -z "$C" ]]; then
     trap "_mysqlrm" EXIT
      _mysqladd
 fi
fi
}
_mysqladd(){
##Add $User1 user to iworx
siteworx -u --login_domain="$DOM" -c MysqlUser -n \
-a add --name "$User1" --password EZSRbdsEpHu5A8NR --confirm_password EZSRbdsEpHu5A8NR
##add $User1 user to DB
siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DB"  --user "$User1" --perms all
 _pexten
}
_mysqlrm(){
siteworx -u --login_domain="$DOM" -c MysqlUser -n -a delete --name "$User1"
}
_pexten(){
   if [[ "$B" == "sql" ]]; then
     _cat
else
   if [[ "$B" == ".xz" ]]; then
     _xzcat
else
   if [[ "$B" == ".gz" ]]; then
     _zcat
   fi
  fi
 fi
}
_cat(){
   printf  ""$GREEN"Importing Database..."$NC""
cat "$DBF" | sed -r 's/DEFINER\s*\=\s*\S+\@\S+//g' | mysql -u "$USER"_"$User1" -p "$USER"_"$DB" --password=EZSRbdsEpHu5A8NR
    printf ""$GREEN"Done\n"$NC""
    _fileinfo
}
_zcat(){
    printf ""$GREEN"Importing Database..."$NC""
zcat "$DBF" | sed -r 's/DEFINER\s*\=\s*\S+\@\S+//g' | mysql -u "$USER"_"$User1" -p "$USER"_"$DB" --password=EZSRbdsEpHu5A8NR
    printf ""$GREEN"Done\n"$NC""
    _fileinfo
}
_xzcat(){
   printf ""$GREEN"Importing Database..."$NC""
xzcat "$DBF" | sed -r 's/DEFINER\s*\=\s*\S+\@\S+//g' | mysql -u "$USER"_"$User1" -p "$USER"_"$DB" --password=EZSRbdsEpHu5A8NR
   printf ""$GREEN"Done\n"$NC""
   _fileinfo
}
########## Export check #########

_exportchk(){
if [[ -z "$2" ]]; then
echo ""
fi
}

########## Export ################
_export(){
DATE="$(date +'%m-%d-%Y')"
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a add --name PZqm6CQ --password SomeCoolPassword123 --confirm_password SomeCoolPassword123
sudo siteworx -u --login_domain="$DOM" -c MysqlPerms -n -a add --name "$DB" --user PZqm6CQ --perms all
sudo -u "$R" mysqldump --opt --skip-lock-tables --routines --max_allowed_packet=2G -u "$R"_PZqm6CQ -p "$R"_"$DB" --password=SomeCoolPassword123 | gzip > ~/"$R"_"$DB"-"$DATE".sql.gz
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a delete --name PZqm6CQ
}
##########List all dbs############
_dblist(){
echo "Db list"
echo "$DASH"
sudo siteworx -u --login_domain="$DOM" -n -c MysqlDb -a listMysqlDatabases | awk '{print $2, $4, $5}' | column -t
}
##########List all users##########
_listusers(){
echo "Users list
$DASH"
sudo siteworx -u --login_domain="$DOM" -c MysqlUser -n -a listMysqlUsers | awk '{print $2}'
}
if [[ "$1" == "-ld" || "$1" == "--listdbs" ]]; then
_domchk
_dblist
else
if [[ "$1" == "-eud" ]]; then
 _domchk
 _userinfo1
else
if [[ "$1" == "-lu" || "$1" == "--listusers" ]]; then
_domchk
_listusers
else
if [[ "$1" == "-ed" ]]; then
 _domchk
 _dbuinfo
_passinfo
_adduser1
else
if [[ "$1" == "-d" ]]; then
_domchk
_dbinfo
_adddb
else
if [[ "$1" == "-u" ]]; then
_domchk
_dbuinfo
_passinfo
_adduser
else
if [[ "$1" == "-ud" ]]; then
_domchk
_dbinfo
_dbuinfo
_passinfo
_adddbpu
else
if [[ "$1" == "-eu" ]]; then
_domchk
_dbinfo
_dbuinfoe
else
if [[ "$1" == "-c" || "$1" == "--copy" ]]; then
_domchk
_SDBinfo
else
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
_helpsec
else
if [[ "$1" == "-U" ]]; then
_domchk
_dbuinfo
_passinfo
_adduserall
else
if [[ "$1" == "-i" ]]; then
_domchk
_fileinfo
else
if [[ "$1" == "-x" && -n "$2" ]]; then
DB="$(echo ""$2"" | cut -d_ -f2,3)"
R="$(echo ""$2"" | cut -d_ -f1)"
DOM="$(grep -r "DocumentRoot /home/"$R"" /etc/httpd/conf.d | tail -n1 | awk '{print $3}' | cut -d/ -f4)"
_export
else
_helpsec
            fi
           fi
          fi
         fi
        fi
       fi
      fi
     fi
    fi
   fi
  fi
 fi
fi
