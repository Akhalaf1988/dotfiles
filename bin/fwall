#! /usr/bin/env bash

main(){
 check $@
}


check ()
{
    local OPTIND opt i;
    while getopts a:lho:r: opt; do
        case $opt in
            a)
                _IP="$OPTARG";
                _domchk;
                _service;
                _addIP
            ;;
            h)
                _helpsec
            ;;
            l)
                _domchk;
                _listIPS
            ;;
            o)
                _IP="$OPTARG";
                _domchk;
                _apfchk
            ;;
            r)
                _IP="$OPTARG";
                _domchk;
                _service;
                _rmIP
            ;;
            *)
                _helpsec
            ;;
        esac;
    done;
    shift $((OPTIND -1))
}
### CHECK PATH ###
_domchk ()
{
    _D="$(pwd | cut -d/ -f4)";
    _V="$(find /etc/httpd/conf.d/ -iname "vhost*" | grep "${_D}")";
    if [[ -n "$_V" ]]; then
        _DOM="$_D";
        _swrxd="$(echo "sudo siteworx -u --login_domain=${_DOM}")"
        _addipc="$(echo "-c firewall -n -a addRule --ip")"
        _rmipc="$(echo "-c Firewall -n -a removeRule")"
    else
        echo "has to be ran from domain directory"
        exit
    fi
}

###echo service list###
_service ()
{
    _H="$(echo "$(hostname | cut -d- -f1)")";
    if [[ "${_H}" == "cloudhost" ]]; then
        _SER='mysql';
    else
        echo -n "Pick a Service [ssh/sftp/ftp/mysql]: ";
        read -r _SER;
    fi;
    if [[ -z "${_SER}" ]]; then
        echo "No service given";
        _service;
    fi
}

###add ip in siteworx###
_addIP ()
{
    case $_SER in
        ssh)
            echo "";
            echo -e "Whitelisting ${_IP} for ssh";
            ${_swrxd} ${_addipc} "${_IP}" --service ssh;
            echo ""
        ;;
        sftp)
            echo "";
            echo -e "Whitelisting ${_IP} for sftp";
            ${_swrxd} ${_addipc} "${_IP}" --service sftp;
            echo ""
        ;;
        ftp)
            echo "";
            echo -e "Whitelisting ${_IP} for ftp";
            ${_swrxd} ${_addipc} "${_IP}" --service ftp;
            echo ""
        ;;
        mysql)
            echo "";
            echo -e "Whitelisting ${_IP} for mysql";
            ${_swrxd} ${_addipc} "${_IP}" --service mysql;
            echo ""
        ;;
        all)
            echo "";
            echo -e "Whitelisting ${_IP} for all Services";
            servicelist=("ssh" "sftp" "ftp" "mysql");
            for _serv in ${servicelist[*]};
            do
                ${_swrxd} ${_addipc} "${_IP}" --service ${_serv};
            done;
            echo ""
        ;;
        *)
            echo "";
            echo -e "Not a Valid Option";
            echo ""
        ;;
    esac
}

############################
############################
###remove ip from siteworx###
_rmIP ()
{
    case $_SER in
        ssh)
            echo "";
            echo -e "Delisting ${_IP} for SSH";
            ${_swrxd} ${_rmipc} --service ssh --ip ${_IP};
            echo ""
        ;;
        sftp)
            echo "";
            echo -e "Delisting ${_IP} for SFTP";
            ${_swrxd} ${_rmipc} "${_IP}" --service sftp;
            echo ""
        ;;
        ftp)
            echo "";
            echo -e "Delisting ${_IP} for FTP";
            ${_swrxd} ${_rmipc} "${_IP}" --service ftp;
            echo ""
        ;;
        mysql)
            echo "";
            echo -e "Delisting ${_IP} for Mysql";
            ${_swrxd} ${_rmipc} "${_IP}" --service mysql;
            echo ""
        ;;
        all)
            echo "";
            echo -e "Delisting ${_IP} for all Services";
            servicelist=("ssh" "sftp" "ftp" "mysql");
            for _serv in ${servicelist[*]};
            do
                ${_swrxd} ${_rmipc} "${_IP}" --service ${_serv};
            done;
            echo ""
        ;;
        *)
            echo "";
            echo -e "${_R}Not a Valid Option${_NC}";
            echo ""
        ;;
    esac
}
###check iptables for an ip###
_apfchk(){
     iptables-save | grep "${_IP}"
}

################################LISTING
###Get a listing of current ips###
_listIPS(){

      echo "Firewall Summary: ${_DOM}"
      echo "------------------------------"
     ${_swrxd} -c firewall -a listIps
}

###show help options###
_helpsec(){

     cat <<- EOF

Usage: fwall option ip

         Supported options:

         -a     adds an ip
         -r     removes an ip
         -h     shows this message
         -l     lists all ips whitelisted in siteworx
         -o     List ips from iptables-save

EOF
}

main $@
